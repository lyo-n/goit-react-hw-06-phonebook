{"version":3,"sources":["components/logo/logo.module.css","components/filter/filter.module.css","redux/contacts/actions.jsx","components/contactItem/contactItem.jsx","components/contacts/contacts.jsx","components/contactForm/contactForm.jsx","components/filter/filter.jsx","components/logo/logo.jsx","components/APP.jsx","redux/contacts/reducer.jsx","redux/store.jsx","index.js","components/contacts/contacts.module.css","components/contactForm/contactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","contact","id","uuid","deleteContact","changeOnFilter","connect","dispatch","ownProps","removeContact","actions","className","styles","item","btn","type","onClick","itemsStyles","enter","enterActive","exit","exitActive","contacts","arrayItems","filter","toLowerCase","includes","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","ContactForm","state","isAddDisable","change","e","target","value","setState","setIsAddEnable","inputSubmit","preventDefault","props","onSubmit","this","form","formBlock","label","inpt","onChange","disabled","Component","mapDispatchToProps","changeFilter","searchBlock","logoStyles","appear","appearActive","Logo","in","unmountOnExit","items","createReducer","action","find","alert","combineReducers","persistConfig","storage","reducing","reducer","persistReduce","persistReducer","store","configureStore","middleware","thunk","persistStore","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.6e9e05bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"logo_logo__18jdZ\",\"appear\":\"logo_appear__KP--O\",\"appearActive\":\"logo_appearActive__1DaMS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBlock\":\"filter_searchBlock__24Gw4\",\"searchInpt\":\"filter_searchInpt__3w9-i\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n    payload: {\r\n        contact: {id: uuid(), name, number},\r\n    },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/remove');\r\n\r\nconst changeOnFilter = createAction('contscts/changeOnFilter');\r\n\r\nexport default {addContact, deleteContact, changeOnFilter};","import React from 'react';\r\nimport styles from '../contacts/contacts.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/contacts/actions';\r\nimport propTypes from 'prop-types';\r\n\r\n\r\nconst ContactItem = \r\n    ({ contact: {name, number }, removeContact }) => {\r\n            return(\r\n            <li className={styles.item}>\r\n            {name}: {number}\r\n            {<button className={styles.btn} type=\"button\" name=\"delete\" onClick={removeContact}>Delete</button>}\r\n        </li>\r\n        );\r\n    };\r\n\r\nContactItem.propTypes = {\r\n    removeContact: propTypes.func.isRequired,\r\n    contacts: propTypes.arrayOf(propTypes.shape({\r\n        id: propTypes.string.isRequired,\r\n        name: propTypes.string.isRequired,\r\n        number: propTypes.string.isRequired,\r\n        }),\r\n    ),\r\n};\r\n\r\nconst mapDispatchToProps  = (dispatch, ownProps) =>({\r\n    removeContact: () =>\r\n    dispatch(actions.deleteContact(ownProps.contact.id)),\r\n});\r\n      \r\nexport default connect(null, mapDispatchToProps)(ContactItem);","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport ContactItem from '../contactItem/contactItem';\r\nimport styles from './contacts.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst itemsStyles = {\r\n    enter: styles.enter,\r\n    enterActive: styles.enterActive,\r\n    exit: styles.exit,\r\n    exitActive: styles.exitActive,\r\n}\r\n\r\nconst ContactList = ({contacts}) => (\r\n    <TransitionGroup component=\"ul\">\r\n       {contacts && contacts.map((contact) => (\r\n        <CSSTransition key={contact.id} timeout={250} classNames={itemsStyles}>\r\n           <ContactItem contact={contact} />\r\n        </CSSTransition>\r\n       ))} \r\n    </TransitionGroup>\r\n);  \r\n\r\nContactList.propTypes = {\r\n    contacts: propTypes.arrayOf(propTypes.shape({\r\n        id: propTypes.string.isRequired,\r\n        name: propTypes.string.isRequired,\r\n        number: propTypes.string.isRequired,\r\n    }),),\r\n};\r\n\r\nconst mapStateToProps = ({ contacts }) => ({\r\n    contacts: contacts.arrayItems.filter(contact =>\r\n      contact.name.toLowerCase().includes(contacts.filter.toLowerCase()),\r\n    ),\r\n  });\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport styles from './contactForm.module.css';\r\nimport actions from '../../redux/contacts/actions';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        isAddDisable: true\r\n    };\r\n  \r\n    change = (e) => {\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name] : value,\r\n        }, this.setIsAddEnable);\r\n    };\r\n    \r\n    setIsAddEnable = () => {\r\n        const { name, number } = this.state;\r\n        this.setState({\r\n          isAddDisable: name === '' || number === ''\r\n        });\r\n      }\r\n\r\n    inputSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { name, number } = this.state;\r\n        this.props.onSubmit(name, number);\r\n        this.setState ({name: \"\", number: \"\"});\r\n    };\r\n\r\n    render() {\r\n        const { name, number, isAddDisable } = this.state;\r\n        return (\r\n            <form onSubmit={this.inputSubmit} className={styles.form}> \r\n                <div className={styles.formBlock}>\r\n                <label className={styles.label}>\r\n                    Name\r\n                    <input  className={styles.inpt}\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={name}     \r\n                            onChange={this.change}                              \r\n                    />\r\n                </label>\r\n                <label className={styles.label}>\r\n                    Number\r\n                    <input  className={styles.inpt}\r\n                            type=\"text\"\r\n                            name=\"number\"\r\n                            value={number}\r\n                            onChange={this.change}\r\n                    />\r\n                </label>\r\n                </div>\r\n                <button className={styles.btn} type=\"submit\" onClick={this.change} disabled = {isAddDisable}>Add contact</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    addContact: propTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, {onSubmit: actions.addContact,})(ContactForm);","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styles from './filter.module.css';\r\nimport actions from '../../redux/contacts/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Filter = ({value, changeFilter}) => {\r\n    return (\r\n        <div className={styles.searchBlock}>\r\n            Find contacts by name\r\n            <input  type=\"text\" value={value} onChange = {(e) => changeFilter(e.target.value)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: propTypes.string.isRequired,\r\n    changeFilter: propTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      value: state.contacts.filter,\r\n    };\r\n};\r\n  \r\nconst mapDispatchToProps = {\r\n    changeFilter: actions.changeOnFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './logo.module.css';\r\n\r\nconst logoStyles = {\r\n  appear: styles.appear,\r\n  appearActive: styles.appearActive,\r\n};\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={500}\r\n      classNames={logoStyles}\r\n      unmountOnExit\r\n    >\r\n      <h1>Phonebook</h1>\r\n    </CSSTransition>\r\n  );\r\n};\r\nexport default Logo;","import React from 'react';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport ContactList from './contacts/contacts';\r\nimport ContactForm from './contactForm/contactForm';\r\nimport Filter from './filter/filter';\r\nimport Logo from './logo/logo';\r\nimport  './app/app.module.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst APP = () =>{\r\n    return (\r\n        <div>\r\n        <Logo />\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        <Filter/>\r\n        <ContactList />\r\n        \r\n    </div>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n      contacts: state.contacts.items\r\n    };\r\n};\r\n    \r\nexport default connect(mapStateToProps)(APP);\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport actions from './actions';\r\n\r\nconst addContactMore = (state, action) => {\r\n    if (\r\n        state && state.find(contact => action.payload.contact.name === contact.name)\r\n    ) { alert('Такой пользователь уже есть в Вашей телефонной книге!!!');\r\n        return state;\r\n      }else{\r\n        return [...state, action.payload.contact];\r\n    }\r\n};\r\n\r\nconst deleteContact = (state, action) => state.filter(contact => contact.id !== action.payload);\r\nconst changeFilter = (state, action) => action.payload;\r\n\r\nconst arrayItems = createReducer([], {\r\n    [actions.addContact]: addContactMore,\r\n    [actions.deleteContact]: deleteContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeOnFilter]: changeFilter,\r\n});\r\n\r\nexport default combineReducers({\r\n    arrayItems,\r\n    filter,\r\n});","import { configureStore, combineReducers } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport thunk from 'redux-thunk';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport reducer from './contacts/reducer';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n};\r\n\r\nconst reducing = combineReducers({\r\n    contacts: reducer,\r\n});\r\n\r\nconst persistReduce = persistReducer(persistConfig, reducing);\r\n\r\nconst store = configureStore({\r\n  reducer: persistReduce,\r\n  middleware: [thunk],\r\n});\r\n\r\npersistStore(store);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport APP from './components/APP';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(<Provider store={store}><APP/></Provider>, \r\n    document.querySelector('#root'));\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contacts_list__15dv2\",\"item\":\"contacts_item__3xAcd\",\"btn\":\"contacts_btn__W6zFb\",\"enter\":\"contacts_enter__3CN4S\",\"enterActive\":\"contacts_enterActive__2sESn\",\"exit\":\"contacts_exit__1QpDW\",\"exitActive\":\"contacts_exitActive__9ebGx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__1Wp8u\",\"formBlock\":\"contactForm_formBlock__1FEpQ\",\"label\":\"contactForm_label__Cvyqx\",\"inpt\":\"contactForm_inpt__1GAVt\",\"btn\":\"contactForm_btn__23jPF\"};"],"sourceRoot":""}